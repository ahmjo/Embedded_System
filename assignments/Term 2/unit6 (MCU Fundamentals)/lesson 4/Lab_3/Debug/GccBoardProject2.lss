
GccBoardProject2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000014c  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000001a0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000001a0  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000001d0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000038  00000000  00000000  0000020c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000001c8  00000000  00000000  00000244  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000000f7  00000000  00000000  0000040c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000003ad  00000000  00000000  00000503  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000a8  00000000  00000000  000008b0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00006268  00000000  00000000  00000958  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000102  00000000  00000000  00006bc0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000028  00000000  00000000  00006cc2  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  00000240  00000000  00000000  00006cea  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	29 c0       	rjmp	.+82     	; 0x54 <__ctors_end>
   2:	00 00       	nop
   4:	50 c0       	rjmp	.+160    	; 0xa6 <__vector_1>
   6:	00 00       	nop
   8:	69 c0       	rjmp	.+210    	; 0xdc <__vector_2>
   a:	00 00       	nop
   c:	82 c0       	rjmp	.+260    	; 0x112 <__vector_3>
   e:	00 00       	nop
  10:	29 c0       	rjmp	.+82     	; 0x64 <__bad_interrupt>
  12:	00 00       	nop
  14:	27 c0       	rjmp	.+78     	; 0x64 <__bad_interrupt>
  16:	00 00       	nop
  18:	25 c0       	rjmp	.+74     	; 0x64 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	23 c0       	rjmp	.+70     	; 0x64 <__bad_interrupt>
  1e:	00 00       	nop
  20:	21 c0       	rjmp	.+66     	; 0x64 <__bad_interrupt>
  22:	00 00       	nop
  24:	1f c0       	rjmp	.+62     	; 0x64 <__bad_interrupt>
  26:	00 00       	nop
  28:	1d c0       	rjmp	.+58     	; 0x64 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	1b c0       	rjmp	.+54     	; 0x64 <__bad_interrupt>
  2e:	00 00       	nop
  30:	19 c0       	rjmp	.+50     	; 0x64 <__bad_interrupt>
  32:	00 00       	nop
  34:	17 c0       	rjmp	.+46     	; 0x64 <__bad_interrupt>
  36:	00 00       	nop
  38:	15 c0       	rjmp	.+42     	; 0x64 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	13 c0       	rjmp	.+38     	; 0x64 <__bad_interrupt>
  3e:	00 00       	nop
  40:	11 c0       	rjmp	.+34     	; 0x64 <__bad_interrupt>
  42:	00 00       	nop
  44:	0f c0       	rjmp	.+30     	; 0x64 <__bad_interrupt>
  46:	00 00       	nop
  48:	0d c0       	rjmp	.+26     	; 0x64 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	0b c0       	rjmp	.+22     	; 0x64 <__bad_interrupt>
  4e:	00 00       	nop
  50:	09 c0       	rjmp	.+18     	; 0x64 <__bad_interrupt>
	...

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	02 d0       	rcall	.+4      	; 0x66 <main>
  62:	72 c0       	rjmp	.+228    	; 0x148 <_exit>

00000064 <__bad_interrupt>:
  64:	cd cf       	rjmp	.-102    	; 0x0 <__vectors>

00000066 <main>:
#define TOGGLE_BET(add,bit) add ^= (1<<bit)
#define READ_BET(add,bit) ((add & (1<<bit))>>bit)


int main(void){
	SET_BET(MCUCR,0);
  66:	85 b7       	in	r24, 0x35	; 53
  68:	81 60       	ori	r24, 0x01	; 1
  6a:	85 bf       	out	0x35, r24	; 53
	RESET_BET(MCUCR,1);
  6c:	85 b7       	in	r24, 0x35	; 53
  6e:	8d 7f       	andi	r24, 0xFD	; 253
  70:	85 bf       	out	0x35, r24	; 53
	SET_BET(MCUCR,2);
  72:	85 b7       	in	r24, 0x35	; 53
  74:	84 60       	ori	r24, 0x04	; 4
  76:	85 bf       	out	0x35, r24	; 53
	SET_BET(MCUCR,3);
  78:	85 b7       	in	r24, 0x35	; 53
  7a:	88 60       	ori	r24, 0x08	; 8
  7c:	85 bf       	out	0x35, r24	; 53
	
	RESET_BET(MCUSR,6);
  7e:	84 b7       	in	r24, 0x34	; 52
  80:	8f 7b       	andi	r24, 0xBF	; 191
  82:	84 bf       	out	0x34, r24	; 52
	
	SET_BET(GICR,5);
  84:	8b b7       	in	r24, 0x3b	; 59
  86:	80 62       	ori	r24, 0x20	; 32
  88:	8b bf       	out	0x3b, r24	; 59
	SET_BET(GICR,6);
  8a:	8b b7       	in	r24, 0x3b	; 59
  8c:	80 64       	ori	r24, 0x40	; 64
  8e:	8b bf       	out	0x3b, r24	; 59
	SET_BET(GICR,7);
  90:	8b b7       	in	r24, 0x3b	; 59
  92:	80 68       	ori	r24, 0x80	; 128
  94:	8b bf       	out	0x3b, r24	; 59
	
	SET_BET(DDRD,5);
  96:	8d 9a       	sbi	0x11, 5	; 17
	SET_BET(DDRD,6);
  98:	8e 9a       	sbi	0x11, 6	; 17
	SET_BET(DDRD,7);
  9a:	8f 9a       	sbi	0x11, 7	; 17
	
	sei();
  9c:	78 94       	sei
	
	while(1){
		RESET_BET(PORTD,5);
  9e:	95 98       	cbi	0x12, 5	; 18
		RESET_BET(PORTD,6);
  a0:	96 98       	cbi	0x12, 6	; 18
		RESET_BET(PORTD,7);
  a2:	97 98       	cbi	0x12, 7	; 18
	}
  a4:	fc cf       	rjmp	.-8      	; 0x9e <main+0x38>

000000a6 <__vector_1>:
}

ISR(INT0_vect){
  a6:	1f 92       	push	r1
  a8:	0f 92       	push	r0
  aa:	0f b6       	in	r0, 0x3f	; 63
  ac:	0f 92       	push	r0
  ae:	11 24       	eor	r1, r1
  b0:	2f 93       	push	r18
  b2:	8f 93       	push	r24
  b4:	9f 93       	push	r25
	SET_BET(PORTD,5);
  b6:	95 9a       	sbi	0x12, 5	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  b8:	2f ef       	ldi	r18, 0xFF	; 255
  ba:	80 e7       	ldi	r24, 0x70	; 112
  bc:	92 e0       	ldi	r25, 0x02	; 2
  be:	21 50       	subi	r18, 0x01	; 1
  c0:	80 40       	sbci	r24, 0x00	; 0
  c2:	90 40       	sbci	r25, 0x00	; 0
  c4:	e1 f7       	brne	.-8      	; 0xbe <__vector_1+0x18>
  c6:	00 c0       	rjmp	.+0      	; 0xc8 <__vector_1+0x22>
  c8:	00 00       	nop
	_delay_ms(100);
	RESET_BET(PORTD,5);
  ca:	95 98       	cbi	0x12, 5	; 18
}
  cc:	9f 91       	pop	r25
  ce:	8f 91       	pop	r24
  d0:	2f 91       	pop	r18
  d2:	0f 90       	pop	r0
  d4:	0f be       	out	0x3f, r0	; 63
  d6:	0f 90       	pop	r0
  d8:	1f 90       	pop	r1
  da:	18 95       	reti

000000dc <__vector_2>:

ISR(INT1_vect){
  dc:	1f 92       	push	r1
  de:	0f 92       	push	r0
  e0:	0f b6       	in	r0, 0x3f	; 63
  e2:	0f 92       	push	r0
  e4:	11 24       	eor	r1, r1
  e6:	2f 93       	push	r18
  e8:	8f 93       	push	r24
  ea:	9f 93       	push	r25
	SET_BET(PORTD,6);
  ec:	96 9a       	sbi	0x12, 6	; 18
  ee:	2f ef       	ldi	r18, 0xFF	; 255
  f0:	80 e7       	ldi	r24, 0x70	; 112
  f2:	92 e0       	ldi	r25, 0x02	; 2
  f4:	21 50       	subi	r18, 0x01	; 1
  f6:	80 40       	sbci	r24, 0x00	; 0
  f8:	90 40       	sbci	r25, 0x00	; 0
  fa:	e1 f7       	brne	.-8      	; 0xf4 <__vector_2+0x18>
  fc:	00 c0       	rjmp	.+0      	; 0xfe <__vector_2+0x22>
  fe:	00 00       	nop
	_delay_ms(100);
	RESET_BET(PORTD,6);
 100:	96 98       	cbi	0x12, 6	; 18
}
 102:	9f 91       	pop	r25
 104:	8f 91       	pop	r24
 106:	2f 91       	pop	r18
 108:	0f 90       	pop	r0
 10a:	0f be       	out	0x3f, r0	; 63
 10c:	0f 90       	pop	r0
 10e:	1f 90       	pop	r1
 110:	18 95       	reti

00000112 <__vector_3>:

ISR(INT2_vect){
 112:	1f 92       	push	r1
 114:	0f 92       	push	r0
 116:	0f b6       	in	r0, 0x3f	; 63
 118:	0f 92       	push	r0
 11a:	11 24       	eor	r1, r1
 11c:	2f 93       	push	r18
 11e:	8f 93       	push	r24
 120:	9f 93       	push	r25
	SET_BET(PORTD,7);
 122:	97 9a       	sbi	0x12, 7	; 18
 124:	2f ef       	ldi	r18, 0xFF	; 255
 126:	80 e7       	ldi	r24, 0x70	; 112
 128:	92 e0       	ldi	r25, 0x02	; 2
 12a:	21 50       	subi	r18, 0x01	; 1
 12c:	80 40       	sbci	r24, 0x00	; 0
 12e:	90 40       	sbci	r25, 0x00	; 0
 130:	e1 f7       	brne	.-8      	; 0x12a <__vector_3+0x18>
 132:	00 c0       	rjmp	.+0      	; 0x134 <__vector_3+0x22>
 134:	00 00       	nop
	_delay_ms(100);
	RESET_BET(PORTD,7);
 136:	97 98       	cbi	0x12, 7	; 18
 138:	9f 91       	pop	r25
 13a:	8f 91       	pop	r24
 13c:	2f 91       	pop	r18
 13e:	0f 90       	pop	r0
 140:	0f be       	out	0x3f, r0	; 63
 142:	0f 90       	pop	r0
 144:	1f 90       	pop	r1
 146:	18 95       	reti

00000148 <_exit>:
 148:	f8 94       	cli

0000014a <__stop_program>:
 14a:	ff cf       	rjmp	.-2      	; 0x14a <__stop_program>
